pipeline {
    agent any

    environment {
        REPO_URL = 'github.com/Ro0ck3r/IA_UNAH.git' // Usa la URL del repositorio
        BRANCH_NAME = 'main'  // Nombre de la rama
        NAME_FILE = "jenkinsFileTest"
    }

    stages {
        stage('Clonando Repositorio') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github_credenciales', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                    script {
                        // limpiamdo el espacio de trabajo antes
                        sh "rm -rf ./*"
                        // Clonando el repositorio con las credenciales
                        sh "git clone https://$GIT_USER:$GIT_PASSWORD@$REPO_URL"
                    }
                }
            }
        }

        stage('Hacer Commit y Push') {
            steps {
                script {
                    dir('/home/tavo/jenkins') {
                        // agregando como directorio seguro la ubicacion del repositorio.
                        sh 'git config --global --add safe.directory /home/tavo/jenkins'
                        // Verificando si hay cambios antes de hacer commit, en changes se guadara los nombres de archivos modificados
                        def changes = sh(script: 'git status --porcelain', returnStdout: true).trim()

                        if (changes) {
                            sh 'git add ${NAME_FILE}'
                            sh 'git commit -m "Mensaje del commit desde Jenkins"'
                            //sh 'git push origin ${BRANCH_NAME} '
                            // Hacer push a GitHub con las credenciales
                            withCredentials([usernamePassword(credentialsId: 'tokenGit', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                            echo "sh git pull https://${GITHUB_USER}:${GITHUB_TOKEN}@$REPO_URL origin ${BRANCH_NAME}"
                            sh "git fetch origin"
                            sh "git pull origin ${BRANCH_NAME}"
                            sh "git push https://${GITHUB_USER}:${GITHUB_TOKEN}@$REPO_URL ${BRANCH_NAME}"
                            } 
                        }else{
                            echo "No hay cambios para hacer commit."
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completado con Ã©xito."
        }
        failure {
            echo "Hubo un error en el pipeline."
        }
    }
}
